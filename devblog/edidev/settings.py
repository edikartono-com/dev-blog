"""
Django settings for edidev project.

Generated by 'django-admin startproject' using Django 3.2.10.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# HARAP GANTI SECRET_KEY SAAT PRODUCTION
SECRET_KEY = 'django-insecure-v1^+jx=n(h1!s4n%q*s+-k^me=5=*ov=df@tv39@hip)lsa&^q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'django.contrib.sites',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # 'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.google',
    # 'allauth.socialaccount.providers.twitter',

    'ckeditor',
    'ckeditor_uploader',
    #'compressor',
    'django_seo_js',
    'imagekit',
    'taggit',
    'widget_tweaks',

    # app
    'akun',
    'corecode',
    'posts',
    # app ini masih rencana ha ha ha ...
    'products', # halaman product
    'sibmail', # next untuk email marketing (newsletter dan subscribe)
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'htmlmin.middleware.HtmlMinifyMiddleware',
    'htmlmin.middleware.MarkRequestMiddleware',
    'django_seo_js.middleware.EscapedFragmentMiddleware',  # If you're using #!
    'django_seo_js.middleware.UserAgentMiddleware',  # If you want to detect by user agent
    'corecode.middleware.IntroMiddleware',
    'corecode.middleware.GetSiteID',
]

ROOT_URLCONF = 'edidev.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'corecode.context_processors.main_menu',
                'corecode.context_processors.page_menu',
            ],
        },
    },
]

WSGI_APPLICATION = 'edidev.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Kalau menggunakan mysql/mariadb. Uncomment dan comment DATABASES di atas dan
# install juga modul mysqclient==2.0.1
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'DB_NAME',
#         'USER': 'DB_USERNAME',
#         'PASSWORD': 'DB_PASSWORD',
#         'HOST': 'localhost',
#         #'PORT': '3306',
#         'OPTIONS': {
#             'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"
#         }
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'id'

TIME_ZONE = 'Asia/Jakarta'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'),]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# django login redirection
LOGIN_REDIRECT_URL = "/46f8c318-6d7f-11ec-9b84-d03745578f09/"
# LOGOUT_REDIRECT_URL = "/46f8c318-6d7f-11ec-9b84-d03745578f09/"

# django-allauth
AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]

ACCOUNT_AUTHENTICATION_METHOD = "username"
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = None
ACCOUNT_LOGIN_ATTEMPTS_LIMIT = 5
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = 300
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_BLACKLIST = ['admin', 'edikartono', 'administrator']
ACCOUNT_USERNAME_MIN_LENGTH = 4
SITE_ID = 1
SOCIALACCOUNT_AUTO_SIGNUP = True
SOCIALACCOUNT_EMAIL_REQUIRED = True

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        # For each OAuth based provider, either add a ``SocialApp``
        # (``socialaccount`` app) containing the required client
        # credentials, or list them here:
        'APP': {
            'client_id': '123',
            'secret': '456',
            'key': ''
        }
    }
}

# CKEDITOR_UPLOADER
CKEDITOR_ALLOW_NONIMAGE_FILES = False
CKEDITOR_BROWSE_SHOW_DIRS = True

CKEDITOR_CONFIGS = {
    'default': {
        #'skin': 'moono',
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Styles', 'Format', 'RemoveFormat', 'Bold', 'Italic', 'Underline'],
            ['Undo', 'Redo'],
            ['NumberedList', 'BulletedList', 'Font', 'FontSize'],
            ['Blockquote', 'TextColor', 'BGColor'],
            ['Link', 'Unlink', 'Anchor'],
            ['Image', 'MediaEmbed', 'Smiley', 'Table', 'SpecialChar'],
            ['Source', 'toc']
        ],
        'extraPlugins': ','.join([
            'uploadimage', 'widget', 'lineutils', 'toc', 'prism', 'lazyload'
        ]), # toc prism lazyload
        'removePlugins': 'exportpdf',
        'width': '100%'
    }
}

CKEDITOR_IMAGE_BACKEND = 'pillow'
CKEDITOR_UPLOAD_PATH = 'inline-image/'

# Django Compressor
# STATICFILES_FINDERS = [
#     'django.contrib.staticfiles.finders.FileSystemFinder',
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#     # compressor
#     'compressor.finders.CompressorFinder',
# ]

# COMPRESS_ENABLED = True
# # COMPRESS_OFFLINE = False
# COMPRESS_URL = STATIC_URL

# COMPRESS_STORAGE = 'compressor.storage.BrotliCompressorFileStorage'
# COMPRESS_FILTERS = {
#     'css': ['compressor.filters.cssmin.rCSSMinFilter'],
#     'js': ['compressor.filters.jsmin.JSMinFilter']
# }

# django-htmlmin
HTML_MINIFY = True

# django-seo-js
SEO_JS_PRERENDER_TOKEN = "123456789abcdefghijkl"
SEO_JS_ENABLED = True
SEO_JS_USER_AGENTS = [
    #"Googlebot",
    #"Yahoo",
    #"bingbot",
    "Badiu",
    "Ask Jeeves",
]
SEO_JS_SEND_USER_AGENT = True
SEO_JS_IGNORE_EXTENSIONS = [
    ".xml",
    ".txt",
    # See helpers.py for full list of extensions ignored by default.
]

# MESSAGE TAG
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.DEBUG: 'alert-secondary',
    messages.INFO: 'alert-info',
    messages.SUCCESS: 'alert-success',
    messages.WARNING: 'alert-warning',
    messages.ERROR: 'alert-danger'
}

# django-jazzmin
JAZZMIN_SETTINGS = {
#     "site_title": "Edi Kartono",
#     "site_header": "I am EDI KARTONO",
    "site_logo": "img/logo.png",
    "site_icon": "img/logo.png",
#     "welcome_sign": "Welcome to",
#     "copyright": "Edi Kartono",
#     "search_model": "auth.User",
#     "user_avatar": None,
#     # "usermenu_links": [
#     #     # {"name": "Support", "url": "https://github.com/farridav/django-jazzmin/issues", "new_window": True},
#     #     # {"model": "auth.user"}
#     # ],
#     # "show_sidebar": True,
#     # "navigation_expanded": False,
#     # # "related_modal_active": True,
    
#     # #############
#     # # UI Tweaks #
#     # #############
#     # # Relative paths to custom CSS/JS scripts (must be present in static files)
#     # "custom_css": None,
#     # "custom_js": None,
#     # # Whether to show the UI customizer on the sidebar
#     # "show_ui_builder": True,
    
#     # ###############
#     # # Change view #
#     # ###############
#     # # Render out the change view as a single form, or in tabs, current options are
#     # # - single
#     # # - horizontal_tabs (default)
#     # # - vertical_tabs
#     # # - collapsible
#     # # - carousel
#     # # "changeform_format": "horizontal_tabs",
#     # "changeform_format": "carousel",
#     # # override change forms on a per modeladmin basis
#     # "changeform_format_overrides": {"auth.user": "carousel", "auth.group": "vertical_tabs"},
#     # # Add a language dropdown into the admin
#     # # "language_chooser": True,
}